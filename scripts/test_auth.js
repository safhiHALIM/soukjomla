const fetch = require('node-fetch');

async function testAuthentication() {
    const baseUrl = 'http://localhost:3000/api';
    
    console.log('üß™ Test de l\'authentification NeoSafi Store...\n');
    
    try {
        // Test 1: Admin Login avec username
        console.log('1Ô∏è‚É£ Test Admin Login avec username...');
        const loginResponse = await fetch(`${baseUrl}/admin/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: 'admin',
                password: 'admin123'
            })
        });
        
        const loginData = await loginResponse.json();
        console.log('   R√©ponse:', loginData);
        
        if (loginData.success) {
            console.log('   ‚úÖ Admin login r√©ussi !');
            console.log(`   üë§ Utilisateur: ${loginData.user.username} (${loginData.user.role})`);
        } else {
            console.log('   ‚ùå Admin login √©chou√©');
        }
        
        console.log('');
        
        // Test 2: Login avec mauvais credentials
        console.log('2Ô∏è‚É£ Test avec mauvais credentials...');
        const badLoginResponse = await fetch(`${baseUrl}/admin/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: 'admin',
                password: 'wrongpassword'
            })
        });
        
        const badLoginData = await badLoginResponse.json();
        console.log('   R√©ponse:', badLoginData);
        
        if (!badLoginData.success) {
            console.log('   ‚úÖ Rejet des mauvais credentials confirm√©');
        } else {
            console.log('   ‚ùå S√©curit√© compromise - mauvais credentials accept√©s');
        }
        
        console.log('');
        
        // Test 3: Test des routes d√©sactiv√©es
        console.log('3Ô∏è‚É£ Test des routes client d√©sactiv√©es...');
        
        const registerResponse = await fetch(`${baseUrl}/register`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: 'test',
                password: 'test123'
            })
        });
        
        const registerData = await registerResponse.json();
        console.log('   Register Response:', registerData);
        
        if (registerResponse.status === 404) {
            console.log('   ‚úÖ Route register correctement d√©sactiv√©e');
        } else {
            console.log('   ‚ö†Ô∏è  Route register encore active');
        }
        
        console.log('');
        
        // Test 4: V√©rification de la structure des donn√©es
        console.log('4Ô∏è‚É£ V√©rification de la structure des donn√©es...');
        
        if (loginData.success && loginData.user) {
            const user = loginData.user;
            const hasUsername = 'username' in user;
            const hasEmail = 'email' in user;
            
            console.log(`   Username pr√©sent: ${hasUsername ? '‚úÖ' : '‚ùå'}`);
            console.log(`   Email pr√©sent: ${hasEmail ? '‚ö†Ô∏è' : '‚úÖ'} (doit √™tre absent)`);
            console.log(`   Structure: ${JSON.stringify(Object.keys(user))}`);
            
            if (hasUsername && !hasEmail) {
                console.log('   ‚úÖ Structure correcte : username utilis√© au lieu d\'email');
            } else {
                console.log('   ‚ùå Structure incorrecte');
            }
        }
        
        console.log('\nüéâ Tests termin√©s !');
        
    } catch (error) {
        console.error('‚ùå Erreur lors des tests:', error.message);
    }
}

// Ex√©cuter les tests
testAuthentication();